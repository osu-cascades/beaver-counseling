<style>
	.top{
		display:inline-block;
	}

	.center {
		text-align: center;
	}

	.search-terms {
	  display: inline-block;
	}

</style>

<h1>Admin Client Reports</h1>
<div style="text-align: center;">
	<div style="text-align:center;">
		<div style="display: inline-block;">
			<%= button_to "Back", 'adminhome', :method => :get, :class => 'btn glyphicon glyphicon-circle-arrow-left', :style => "background: #D3D3D3;" %>
		</div>&nbsp;&nbsp;
		<div style="display: inline-block;">
			<%= button_to "Client Feedback", '/session_rating_forms', :method => :get, :class => 'btn', :style => "background: #D3D3D3;" %>
		</div>&nbsp;&nbsp;
		<div style="display: inline-block;">
			<button class="btn" style="background: #D3D3D3;">Save Data</button>
		</div>
	</div>
	<br>
	<select onchange="makeGraph(this)">
		<option>Age</option>
		<option>City</option>
		<option>Insurance</option>
		<option>Seen Counselor Before</option>
		<option>Insurance</option>
		<option>Education</option>
		<option>Gender</option>
		<option>Culture Background</option>
		<option>Sexual Orientation</option>
		<option>Relationship Status</option>
	</select>
</div>


<canvas id="bar-chart-horizontal" width="200" height="60"></canvas>

<script>

var graph; //Global getting assinged chart objects. Used to call destroy
var clients = <%= raw Client.all.to_json %>

$(document).ready(function() {
	var objList = [], labels = [];
	var currentYear = new Date().getFullYear();
	for (var i = 0; i < clients.length; i++) {
		objList.push(currentYear - (parseInt(clients[i].dob)));
	}
	createChart(labels, "Age (years)", getNumClientsAtListItem, objList, 'Clients Age')
});

function makeGraph(obj) {
	var selectedOption = obj.options[obj.selectedIndex].value;
	var objList = [], labels = [];
	switch(selectedOption) {
		case ("Age"): {
			var objList = [], labels = [];
			var currentYear = new Date().getFullYear();
			for (var i = 0; i < clients.length; i++) {
				objList.push(currentYear - (parseInt(clients[i].dob)));
			}
			createChart(labels, "Age (years)", getNumClientsAtListItem, objList, 'Clients Age')
			break;
		}
		case ("City"): {
			var objList = [], labels = [];
			var currentYear = new Date().getFullYear();
			for (var i = 0; i < clients.length; i++) {
				objList.push(clients[i].local_address);
			}
			createChart(labels, "City (address)", getNumClientsAtListItem, objList, 'Clients City')
			break;
		}
		case ("Insurance"):
		case ("Seen Counselor Before"):
		case ("Insurance"):
		case ("Education"):
		case ("Gender"):
		case ("Culture Background"):
		case ("Sexual Orientation"):
		case ("Relationship Status"):
	}
}

// helper function
function getNumClientsAtListItem(list, labels) {
	var unique = {}; // key:age value:numOfOcurrences
	var currentItem;
	for (var i = 0; i < list.length; i++) { // for unique in list
		currentItem = list[i];
		if (!(currentItem in unique)) {
			unique[currentItem] = 1;
		} else {
			var num = parseInt(unique[currentItem])
			num += 1
			unique[currentItem] = num;
		}
	}
	var ocurrences = [];
	for (var key in unique) {
			labels.push(key);
			ocurrences.push(unique[key]);
	}
	return ocurrences;
}

function createChart(_labels, _label, helperFunction, listedParam, _text) {
	new Chart(document.getElementById("bar-chart-horizontal"), {
	    type: "horizontalBar",
	    data: {
	      labels: _labels,
	      datasets: [
	        {
	          label: _label,
	          backgroundColor: ["#8e5ea2", "#3e95cd","#3cba9f","#e8c3b9","#c45850"],
	          data: helperFunction(listedParam, _labels)
	        }
	      ]
	    },
	    options: {
				scales: {
					xAxes: [{
						ticks: {
							beginAtZero: true,
							min: 0,
							stepSize: 1
						}
					}],
		      legend: { display: false },
		      title: {
		        display: true,
		        text: _text,
		      }
		    }
			}
	});
}

</script>
